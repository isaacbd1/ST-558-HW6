[
  {
    "objectID": "Hodge Podge Assignment.html",
    "href": "Hodge Podge Assignment.html",
    "title": "Hodge Podge Assignment",
    "section": "",
    "text": "lapply() applies a function (specified in the FUN argument of lapply()) to each object in a list.\nThe code would be lapply(my_list, FUN = cor, method = \"kendall\").\nThe advantage to using purr functions over the BaseR apply family is that the purr functions are written with a more consistent syntax, and additionally the purr package has some useful helper functions that BaseR lacks.\nA side-effect function produces or changes something outside its parameters, in addition to returning a value/object, thus impacting the overall programming environment. This is in contrast to a transformation function, which only manipulates the data it is given and does not change any external state. Examples of side-effect functions include print() and plot().\nThis is because a function has its own local environment. Whatever variables we name in the local function environment will not exist in the greater global environment with the other code, so that is why we do not run into any inconsistencies."
  },
  {
    "objectID": "Hodge Podge Assignment.html#task-1-conceptual-questions",
    "href": "Hodge Podge Assignment.html#task-1-conceptual-questions",
    "title": "Hodge Podge Assignment",
    "section": "",
    "text": "lapply() applies a function (specified in the FUN argument of lapply()) to each object in a list.\nThe code would be lapply(my_list, FUN = cor, method = \"kendall\").\nThe advantage to using purr functions over the BaseR apply family is that the purr functions are written with a more consistent syntax, and additionally the purr package has some useful helper functions that BaseR lacks.\nA side-effect function produces or changes something outside its parameters, in addition to returning a value/object, thus impacting the overall programming environment. This is in contrast to a transformation function, which only manipulates the data it is given and does not change any external state. Examples of side-effect functions include print() and plot().\nThis is because a function has its own local environment. Whatever variables we name in the local function environment will not exist in the greater global environment with the other code, so that is why we do not run into any inconsistencies."
  },
  {
    "objectID": "Hodge Podge Assignment.html#task-2-writing-r-functions",
    "href": "Hodge Podge Assignment.html#task-2-writing-r-functions",
    "title": "Hodge Podge Assignment",
    "section": "Task 2: Writing R Functions",
    "text": "Task 2: Writing R Functions\n\nThe code for the Root Mean Square Error is given by:\n\ngetRMSE &lt;- function(x, y, ...) {\n  if (length(x) != length(y)) {\n    stop(\"Length of (vector) inputs must be the same.\")\n  }\n  else {\n    z &lt;- c()\n    for (i in 1:length(x)) {\n      z[i] &lt;- (x[i] - y[i])^2\n    }\n    RMSE &lt;- sqrt(mean(z, ...))\n  return (RMSE) \n  }\n}\n\nFirst, we run the given code to create some response values and predictions:\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\nNow, we test our getRMSE() function using this data:\n\ngetRMSE(resp, pred)\n\n[1] 0.9581677\n\n\nThat seems to have worked. Next, we will further test our getRMSE() function by replacing two of the response values with missing values:\n\nresp[1] &lt;- NA_real_\nresp[2] &lt;- NA_real_\n\n#if we don't specify how to deal with missing values, we get 'NA'\ngetRMSE(resp, pred)\n\n[1] NA\n\n#but if we add the argument na.rm = TRUE (i.e. remove NA values)\n#then we get a valid answer for the RMSE of resp and pred\ngetRMSE(resp, pred, na.rm = TRUE)\n\n[1] 0.9661699\n\n\nThe code for the MAE() function is given below:\n\ngetMAE &lt;- function(x, y, ...) {\n  if (length(x) != length(y)) {\n    stop(\"Length of (vector) inputs must be the same.\")\n  }\n  else {\n    z &lt;- c()\n    for (i in 1:length(x)) {\n      z[i] &lt;- abs(x[i] - y[i])\n    }\n    MAE &lt;- mean(z, ...)\n  return (MAE) \n  }\n}\n\nFirst, we run the following code to create response values and predictions:\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\nNow we test our getMAE() function using this data:\n\ngetMAE(resp, pred)\n\n[1] 0.8155776\n\n\nThat seems to have worked. Next, we further test our getMAE() function by replacing two of the response values with missing values:\n\nresp[1] &lt;- NA_real_\nresp[2] &lt;- NA_real_\n\n#if we don't specify how to deal with missing values, we get 'NA'\ngetMAE(resp, pred)\n\n[1] NA\n\n#but if we add the argument na.rm = TRUE (i.e. remove NA values)\n#then we get a valid answer for the MAE of resp and pred\ngetRMSE(resp, pred, na.rm = TRUE)\n\n[1] 0.9661699\n\n\nNext we create a wrapper function which can be used to get either or both of the above metrics:\n\ngetMetrics &lt;- function(x, y, metrics = \"both\", ...) {\n  if (is.vector(x) == FALSE | is.vector(y) == FALSE) {\n    stop(\"Inputs must be numeric vectors of equal length.\")\n  }\n  else if (is.numeric(x) == FALSE | is.numeric(y) == FALSE) {\n    stop(\"Inputs must be numeric vectors of equal length.\")\n  }\n  else if (length(x) != length(y)) {\n    stop(\"Inputs must be numeric vectors of equal length.\")\n  }\n  else{\n    if (metrics == \"both\") {\n      return (list(\"RMSE:\" = getRMSE(x, y, ...), \"MAE:\" = getMAE(x, y, \n                                                                  ...)))\n    }\n    else if (metrics == \"RMSE\") {\n      return (list(\"RMSE:\" = getRMSE(x, y, ...)))\n    }\n    else if (metrics  == \"MAE\") {\n      return (list(\"MAE:\" = getMAE(x, y, ...)))\n    }\n    else {\n      stop(\"Unknown metric.\")\n    }\n  }\n}\n\nFirst, we run the following code to create response values and predictions:\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\nNow we test our getMetrics() function using this data:\n\n#return both metrics\ngetMetrics(resp, pred)\n\n$`RMSE:`\n[1] 0.9581677\n\n$`MAE:`\n[1] 0.8155776\n\n\n\n#return only RMSE metric\ngetMetrics(resp, pred, metrics = \"RMSE\")\n\n$`RMSE:`\n[1] 0.9581677\n\n\n\n#return only MAE metric\ngetMetrics(resp, pred, metrics = \"MAE\")\n\n$`MAE:`\n[1] 0.8155776\n\n\nThat seems to have worked. Next, we further test our getMetrics() function by replacing two of the response values with missing values:\n\nresp[1] &lt;- NA_real_\nresp[2] &lt;- NA_real_\n\n#if we don't specify how to deal with missing values, we get 'NA'\ngetMetrics(resp, pred)\n\n$`RMSE:`\n[1] NA\n\n$`MAE:`\n[1] NA\n\n#but if we add the argument na.rm = TRUE (i.e. remove NA values)\n#then we get a valid answer for the RMSE and MAE of resp and pred\ngetMetrics(resp, pred, na.rm = TRUE)\n\n$`RMSE:`\n[1] 0.9661699\n\n$`MAE:`\n[1] 0.8241201\n\n\n\n#similarly, if we don't specify how to deal with missing values \n#we get 'NA'\ngetMetrics(resp, pred, metrics = \"RMSE\")\n\n$`RMSE:`\n[1] NA\n\n#but if we add the argument na.rm = TRUE (i.e. remove NA values)\n#then we get a valid answer for the RMSE of resp and pred\ngetMetrics(resp, pred, metrics = \"RMSE\", na.rm = TRUE)\n\n$`RMSE:`\n[1] 0.9661699\n\n\n\n#similarly, if we don't specify how to deal with missing values \n#we get 'NA'\ngetMetrics(resp, pred, metrics = \"MAE\")\n\n$`MAE:`\n[1] NA\n\n#but if we add the argument na.rm = TRUE (i.e. remove NA values)\n#then we get a valid answer for the MAE of resp and pred\ngetMetrics(resp, pred, metrics = \"MAE\", na.rm = TRUE)\n\n$`MAE:`\n[1] 0.8241201\n\n\nLastly, lets pass a data frame to the getMetrics() function to check that it will tell us our input is invalid:\n\ndf1 &lt;- data.frame(resp, pred)\ndf2 &lt;- data.frame(pred, resp)\ngetMetrics(df1, df2, na.rm = TRUE)\n\nError in getMetrics(df1, df2, na.rm = TRUE): Inputs must be numeric vectors of equal length."
  },
  {
    "objectID": "Hodge Podge Assignment.html#task-3-querying-an-api-and-a-tidy-style-function",
    "href": "Hodge Podge Assignment.html#task-3-querying-an-api-and-a-tidy-style-function",
    "title": "Hodge Podge Assignment",
    "section": "Task 3: Querying an API and a Tidy-Style Function",
    "text": "Task 3: Querying an API and a Tidy-Style Function\n\nIn this task we are going to query the news API from newsapi.org. One interesting piece of data that they have is called “Top business headlines in the US right now,” so we’ll query that.\n\nurl &lt;- \"https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=7a1ff6590573438a818fad1e9f383454\"\n\nbusiness_headlines &lt;- httr::GET(url)\n\nNext we parse what is returned and obtain a data frame with the article information.\n\nlibrary(jsonlite)\nlibrary(tibble)\n\nparsed &lt;- fromJSON(rawToChar(business_headlines$content))\nbusiness_headlines &lt;- as_tibble(parsed$articles)\nbusiness_headlines\n\n# A tibble: 20 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 cbs-news  CBS … Aimee… \"Tru… Trading in… http… https://a… 2024-10-15… \"Econo…\n 2 the-wall… The … The W… \"Boe… &lt;NA&gt;        http… &lt;NA&gt;       2024-10-15…  &lt;NA&gt;  \n 3 the-verge The … Allis… \"AMD… Chip maker… http… https://c… 2024-10-15… \"AMD, …\n 4 associat… Asso… TOM M… \"Wal… Walgreens … http… https://d… 2024-10-15… \"Walgr…\n 5 &lt;NA&gt;      Barr… Barro… \"Uni… &lt;NA&gt;        http… &lt;NA&gt;       2024-10-15…  &lt;NA&gt;  \n 6 &lt;NA&gt;      Barr… Barro… \"Nvi… &lt;NA&gt;        http… &lt;NA&gt;       2024-10-15…  &lt;NA&gt;  \n 7 &lt;NA&gt;      Fox … Aisli… \"Big… Big Lots a… http… https://a… 2024-10-15… \"Big L…\n 8 &lt;NA&gt;      Yaho… Karen… \"Sto… As a fresh… http… https://s… 2024-10-15… \"On Tu…\n 9 &lt;NA&gt;      Fox … Eric … \"Ame… The New Yo… http… https://a… 2024-10-15… \"Ameri…\n10 cbs-news  CBS … Alexa… \"As … Hospitals … http… https://a… 2024-10-15… \"IV fl…\n11 &lt;NA&gt;      Fox … Danie… \"Hol… The larges… http… https://a… 2024-10-15… \"The N…\n12 abc-news  ABC … The A… \"US … The United… http… https://i… 2024-10-15… \"WASHI…\n13 the-wall… The … The W… \"Sto… &lt;NA&gt;        http… &lt;NA&gt;       2024-10-15…  &lt;NA&gt;  \n14 &lt;NA&gt;      Vari… Todd … \"Net… Analysts e… http… https://v… 2024-10-15… \"Netfl…\n15 techcrun… Tech… Maxwe… \"Whi… The Biden … http… https://t… 2024-10-15… \"The B…\n16 &lt;NA&gt;      Real… https… \"Maj… The U.S. F… http… https://w… 2024-10-15… \"If yo…\n17 &lt;NA&gt;      New … Taylo… \"Boe… Boeing wil… http… https://n… 2024-10-15… \"Boein…\n18 &lt;NA&gt;      Inve… Andre… \"Uni… Shares of … http… https://w… 2024-10-15… \"&lt;ul&gt;&lt;…\n19 &lt;NA&gt;      Decr… Murtu… \"Bit… Will Bitco… http… https://c… 2024-10-15… \"With …\n20 ars-tech… Ars … Kyle … \"Rep… But the pr… http… https://c… 2024-10-15…  &lt;NA&gt;  \n\n\nNext we use the pluck() function from purrr to grab the source element.\n\nlibrary(purrr)\n\n\nAttaching package: 'purrr'\n\n\nThe following object is masked from 'package:jsonlite':\n\n    flatten\n\npluck(business_headlines, \"source\")\n\n                        id                    name\n1                 cbs-news                CBS News\n2  the-wall-street-journal The Wall Street Journal\n3                the-verge               The Verge\n4         associated-press        Associated Press\n5                     &lt;NA&gt;                Barron's\n6                     &lt;NA&gt;                Barron's\n7                     &lt;NA&gt;            Fox Business\n8                     &lt;NA&gt;     Yahoo Entertainment\n9                     &lt;NA&gt;            Fox Business\n10                cbs-news                CBS News\n11                    &lt;NA&gt;            Fox Business\n12                abc-news                ABC News\n13 the-wall-street-journal The Wall Street Journal\n14                    &lt;NA&gt;                 Variety\n15              techcrunch              TechCrunch\n16                    &lt;NA&gt;             Real Simple\n17                    &lt;NA&gt;           New York Post\n18                    &lt;NA&gt;            Investopedia\n19                    &lt;NA&gt;                 Decrypt\n20            ars-technica            Ars Technica"
  }
]